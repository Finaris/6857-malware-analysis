# -*- coding: utf-8 -*-
"""

This module provides the skeleton of an implementable interface which all
individual scrapers will use. Each website will likely need its own type of
scraper as the format of blacklisted URLs and information contained might be
different for each website. This standardization will simplify data collection.

"""


class Scraper:
    """ Interface that scrapers for a particular website should follow.

    Attributes:
        url: (str) The URL of the website which is being scraped. Include a
                   forward slash, e.g.: https://www.google.com/

    """

    def __init__(self, url):
        self. url = url

    def scrape(self, page=""):
        """ Given a particular page on the website, scrape it for relevant
            information.

        :param page: (str) Name of the page to scrape (homepage by default)
        :return: (dict) A dict mapping some attribute to another dict.
                        This other dict will map specific instances to it's
                        frequency, e.g.:
                            {'origin_country': {'france': 1, 'germany': 2}}

                        Include a list in this dictionary which contains all of
                        the parsed records, e.g.:
                            {'all_records': [{'origin_country': 'france'},...]}
        """
        raise NotImplementedError

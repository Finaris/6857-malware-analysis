import pandas as pd
import numpy as np
import json
from pandas.io.json import json_normalize
import os
import csv
import ast

class ResponseAnalyzer(object):
    def __init__(self, inp, merged = False):
        """
        Initializes an analyzer for VirusTotal response csv,
        as outputted by csv_read.py.
        Args:
            inp (str): either a directory containing raw csvs, or a
                a single cleaned, merged csv.
            merged (bool): if inp is a directory, set merged to False.
                Else, set to true.
        """
        # NOTE: since the unrolling is slow, we would suggest running once,
        # printing to a csv, and loading it using merged = True
        self.input = inp
        if not merged:
            self.df = pd.DataFrame()
            for f in os.listdir(self.input):
                if f.endswith(".csv"):
                    path = self.input + "/" + f
                    currdf = pd.read_csv(path)
                    response_df = self.unroll_response_col(currdf)
                    #df1 = pd.DataFrame(currdf.pop('response').apply(pd.io.json.loads).values.tolist(), index=currdf.index)
                    #currdf = json_normalize(currdf["response"].to_dict())
                    currdf = currdf.merge(response_df, on ="i")
                    self.df = pd.concat([self.df, currdf])
            self.df.drop(["response"], axis = 1, inplace = True)
        else:
            self.df = pd.read_csv(self.input)

    def unroll_response_col(self, df):
        """Unrolls response column (with a json value) into individual columns."""
        outdf = pd.DataFrame()
        for index, row in df.iterrows():
            r_dict = ast.literal_eval(row["response"])
            currdf = json_normalize([r_dict])
            currdf["i"] = row["i"]
            outdf = pd.concat([outdf, currdf])
        return outdf

    def get_df(self):
        return self.df.copy()

    def print_csv(self, outfile):
        """Prints the dataframe to outfile."""
        self.df.to_csv(outfile, index = False)
            
        
if __name__ == "__main__":
    ra = ResponseAnalyzer("./processed/responses")
    ra.print_csv("./processed/hash_processed.csv")

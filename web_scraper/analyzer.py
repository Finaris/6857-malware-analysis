import pandas as pd
import numpy as np
import json
from pandas.io.json import json_normalize
import os
import csv

class MalwareAnalyzer(object):
    def __init__(self, directory):
        """Init functions expects a directory of jsons."""
        self.directory = directory
        self.df = get_df_from_dir()

    def get_df_from_dir(self):
        """
        From a directory of json files, reads and returns
        a combined dataframe.
        """
        df = pd.dataFrame()
        for f in os.listdir(self.directory):
            if file.endsiwth(".json"):
                # TODO: unroll jsons if they need to be unrolled
                path = self.directory + "/" + f
                currdf = pd.read_json(f, orient = 'records')
                df = pd.concat([df, currdf], axis = 1)
        return df

    def get_description(self, outdir):
        """
        Gets a basic description of the combined dataframe.
        Currently, reads the summary statistics of the numerical
        fields and the unique values of the non-numerical fields
        to outdir.
        """
        describedf = self.df.describe(include=[np.number])
        describedf.to_csv(out_dir + "/numerical.csv")
        unique = {}
        other_columns = self.df.select_dtypes(exclude=[np.number]).columns
        for col in other_columns:
            try:
                unique_vals = sorted(self.df[col].unique())
            except:
                unique_vals = self.df[col].unique()
        with open(out_dir + "/other.csv", "w") as csv_file:
            writer = csv.writer(csv_file)
            for key, val in unique.items():
                writer.writerow([key, val])

    def get_df(self):
        return self.df.copy()

if __name__ == "__main__":
    pass

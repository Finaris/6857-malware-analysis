import geoip2.database
import pandas as pd

"""
Requires you to have the geoip directory, which contains the GeoLite2-City, Country, and ASN database
files (in .mmdb format)
"""

reader_city = geoip2.database.Reader('geoip/GeoLite2-City.mmdb')
reader_country = geoip2.database.Reader('geoip/GeoLite2-Country.mmdb')
reader_asn = geoip2.database.Reader('geoip/GeoLite2-ASN.mmdb')

count = 0
def find_response(ip):
	global count
	count += 1
	print(count)
	try:
		response_city = reader_city.city(ip)
		raw = response_city.__dict__['raw']
		if 'city' in raw:
			city = raw['city']['names']['en']
		else:
			city = "NOT FOUND"

		if 'country' in raw:
			country = response_city.__dict__['raw']['country']['names']['en']
		else:
			country = "NOT FOUND"

		if 'continent' in raw:
			continent = raw['continent']['names']['en']
		else:
			continent = "NOT FOUND"
	except:
		city = "NOT FOUND"
		try:
			response_country = reader_country.country(ip)
			raw = response_country.__dict__
			if 'continent' in raw:
				continent = raw['continent']['names']['en']
			else:
				continent = "NOT FOUND"
			if 'country' in raw:
				country = raw['country']['names']['en']
			else:
				country = "NOT FOUND"
		except:
			city = "IP NOT FOUND IN DB"
			country = "IP NOT FOUND IN DB"
			continent = "IP NOT FOUND IN DB"
	try:
		response_asn = reader_asn.asn(ip)
		# traits = 
		raw = response_asn.__dict__
		if "autonomous_system_number" in raw:
			asn = str(raw['autonomous_system_number'])
		else:
			asn = "NOT FOUND"
		if "autonomous_system_organization" in raw:
			# autonomous system organization
			aso = raw['autonomous_system_organization']
		else:
			aso = "NOT FOUND"
	except:
		asn = "ASN NOT FOUND IN DB"
		aso = "ASN NOT FOUND IN DB"
	


	return (city, continent, country, asn, aso)

"""
RESPONSE FORMAT

CITY:
_locales (list): ['en'] 
continent (geoip2.records.Continent): want response['continent'].__dict__['names']['en']
country (geoip2.records.Country): want response['country'].__dict__['names']['en']
traits (geoip2.records.Trait): untrusty response
raw (dict): everything

COUNTRY:
[useless]

ASN:
autonomous_system_number (int):
autonomous_system_organization (str): 
"""

df = pd.read_csv('geoip/ips.csv')
df.columns = ['id', 'ip']
ips = df.iloc[:, 1]
info = ips.apply(find_response)
df[['city', 'continent', 'country', 'asn', 'aso']] = pd.DataFrame(info.tolist(), index=df.index)
df.to_csv('ip_info.csv', index=False)






# -*- coding: utf-8 -*-
"""

This module gathers all URLs which host malware.

NOTE: This should be run at the root of the project.

"""

import json
import os


def is_url_ip_address(url: str) -> bool:
    """ Given something that looks like a URL, determine if it's an IP address or domain name.

    :param url: (str) String which looks like a URL.
    :return: (bool) True if it looks like an IP address, False otherwise.
    """
    return all(component.isdigit() for component in url.split("."))


if __name__ == "__main__":
    # Constants for the purposes of extraction.
    ROOT = "web_scraper/raw_output/json_data"
    EXCLUDED = {".html", ".php", ".aspx", ".asp", ".htm"}

    # Procedurally gather all URLs which host downloadable content.
    all_urls = []
    for file_name in filter(lambda blob: blob.endswith(".json"), os.listdir(os.path.join(ROOT))):
        with open(os.path.join(ROOT, file_name)) as file:
            for record in json.load(file):
                # Only check records that have URLs.
                if "url" in record:
                    base = record["url"].replace("http://", "").replace("https://", "")
                    components = base.split("/")
                    # Make sure there is a file, and that it has an allowed extension.
                    if not is_url_ip_address(base) and len(components) > 1 and "." in components[-1]:
                        for exclude in EXCLUDED:
                            if exclude in components[-1].lower():
                                break
                        else:
                            all_urls.append(record["url"])

    # Write the results to a file.
    with open('hosted_malware.json', 'w+') as file:
        json.dump(all_urls, file)
